{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Documents/paycom-planner-frontend/src/components/CurrentEventPopUp.jsx\";\nimport React, { useState, useContext } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { EventContexts } from \"./EventContexts\";\nimport Button from \"react-bootstrap/Button\";\nimport { LoginContext } from \"./LoginContext\";\nconst PopUpOuter = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  margin: auto;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\nconst PopUpInner = styled.div`\n  position: absolute;\n  width: 50%;\n  height: 50%;\n  min-width: 350px;\n  position: fixed;\n  left: 50%;\n  bottom: 35%;\n  transform: translateX(-50%);\n  margin: auto;\n  border-radius: 20px;\n  background: white;\n`;\nconst XButton = styled.div`\n  border: 1px solid lightgray;\n  color: white;\n  background: lightgray;\n  height: 18px;\n  width: 18px;\n  cursor: pointer;\n  margin-right: 10px;\n  line-height: 17px;\n  border-radius: 50%;\n`;\nconst RightFlexBox = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  padding-top: 10px;\n`;\nconst CenterBox = styled.div`\n  display: block;\n  justify-content: center;\n`;\nconst Paragraph = styled.div`\n  overflow-y: auto;\n  overflow-x: hidden;\n  max-width: 90%;\n  max-height: calc(130px + 5vw);\n  border-radius: 15px;\n  border: 2px solid #73ad21;\n  word-wrap: break-word;\n  margin: auto;\n`;\nconst ButtonWrapper = styled.div`\n  bottom: 4px;\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n`;\nexport default function CurrentEventPopUp() {\n  const {\n    setIsEventPopUpOpen,\n    eventId,\n    eventsData,\n    deleteEvent,\n    editEvent\n  } = useContext(EventContexts);\n  const [eventName] = useState(eventsData[eventId].name);\n  const [eventDesc] = useState(eventsData[eventId].description);\n  const [eventDate] = useState(new Date(parseInt(eventsData[eventId].date)));\n  const {\n    email\n  } = useContext(LoginContext);\n  return /*#__PURE__*/React.createElement(PopUpOuter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PopUpInner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RightFlexBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(XButton, {\n    onClick: () => setIsEventPopUpOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, eventName), /*#__PURE__*/React.createElement(CenterBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Time: \" + eventDate.toLocaleString()), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Description: \"), /*#__PURE__*/React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, eventDesc), /*#__PURE__*/React.createElement(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, email === eventsData.user ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"warning\",\n    onClick: () => editEvent(eventId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginLeft: \"10px\"\n    },\n    onClick: () => deleteEvent(eventId),\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \"Delete\")) : /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, eventsData.user)))));\n}","map":{"version":3,"sources":["/home/jacob/Documents/paycom-planner-frontend/src/components/CurrentEventPopUp.jsx"],"names":["React","useState","useContext","styled","EventContexts","Button","LoginContext","PopUpOuter","div","PopUpInner","XButton","RightFlexBox","CenterBox","Paragraph","ButtonWrapper","CurrentEventPopUp","setIsEventPopUpOpen","eventId","eventsData","deleteEvent","editEvent","eventName","name","eventDesc","description","eventDate","Date","parseInt","date","email","toLocaleString","user","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { EventContexts } from \"./EventContexts\";\nimport Button from \"react-bootstrap/Button\";\nimport { LoginContext } from \"./LoginContext\";\n\nconst PopUpOuter = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  margin: auto;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nconst PopUpInner = styled.div`\n  position: absolute;\n  width: 50%;\n  height: 50%;\n  min-width: 350px;\n  position: fixed;\n  left: 50%;\n  bottom: 35%;\n  transform: translateX(-50%);\n  margin: auto;\n  border-radius: 20px;\n  background: white;\n`;\n\nconst XButton = styled.div`\n  border: 1px solid lightgray;\n  color: white;\n  background: lightgray;\n  height: 18px;\n  width: 18px;\n  cursor: pointer;\n  margin-right: 10px;\n  line-height: 17px;\n  border-radius: 50%;\n`;\n\nconst RightFlexBox = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  padding-top: 10px;\n`;\nconst CenterBox = styled.div`\n  display: block;\n  justify-content: center;\n`;\nconst Paragraph = styled.div`\n  overflow-y: auto;\n  overflow-x: hidden;\n  max-width: 90%;\n  max-height: calc(130px + 5vw);\n  border-radius: 15px;\n  border: 2px solid #73ad21;\n  word-wrap: break-word;\n  margin: auto;\n`;\n\nconst ButtonWrapper = styled.div`\n  bottom: 4px;\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n`;\n\nexport default function CurrentEventPopUp() {\n  const {\n    setIsEventPopUpOpen,\n    eventId,\n    eventsData,\n    deleteEvent,\n    editEvent,\n  } = useContext(EventContexts);\n  const [eventName] = useState(eventsData[eventId].name);\n  const [eventDesc] = useState(eventsData[eventId].description);\n  const [eventDate] = useState(new Date(parseInt(eventsData[eventId].date)));\n  const { email } = useContext(LoginContext);\n  return (\n    <PopUpOuter>\n      <PopUpInner>\n        <RightFlexBox>\n          <XButton onClick={() => setIsEventPopUpOpen(false)}>&times;</XButton>\n        </RightFlexBox>\n        <h2>{eventName}</h2>\n        <CenterBox>\n          <h6>{\"Time: \" + eventDate.toLocaleString()}</h6>\n          <h6>Description: </h6>\n          <Paragraph>{eventDesc}</Paragraph>\n          <ButtonWrapper>\n            { email === eventsData.user ? \n              <div>\n              \n              <Button variant=\"warning\" onClick={() => editEvent(eventId)}>\n                Edit\n              </Button>\n              <Button\n                style={{ marginLeft: \"10px\" }}\n                onClick={() => deleteEvent(eventId)}\n                variant=\"danger\"\n              >\n                Delete\n              </Button>\n              </div>\n                : \n              <Button variant=\"success\">\n                {eventsData.user}\n              </Button> }\n          </ButtonWrapper>\n        </CenterBox>\n      </PopUpInner>\n    </PopUpOuter>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}