{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Documents/paycom-planner-frontend/src/components/EventDayContainer.jsx\";\nimport React, { useContext } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { EventContexts } from \"./EventContexts\";\nimport axios from \"axios\";\nconst Box = styled.div`\n  justify-content: center;\n  border: 1px solid black;\n  height: 10vh;\n  margin-bottom: -2px;\n  display: block;\n  margin-right: -2px;\n  margin-left: -2px;\n  cursor: pointer;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\nconst EventBox = styled.div`\n  height: 20%;\n  width: 90%;\n  margin: auto;\n  border: 1px solid limegreen;\n  margin-top: 2px;\n  background: linear-gradient(lightgreen, white);\n  border-radius: 5px;\n  overflow: hidden;\n  white-space: nowrap;\n  font-size: calc(6px + 0.5vw);\n  line-height: 17px;\n  text-overflow: ellipsis;\n`;\nconst EventDayContainer = React.memo(({\n  dateNum,\n  eyear,\n  emonth\n}) => {\n  const {\n    openEventView,\n    openNewEventPopUp,\n    eventsData: events,\n    month,\n    year\n  } = useContext(EventContexts);\n\n  const handleEmptyClick = () => {\n    axios.get(`/session.php`).then(res => {\n      if (res.data !== \"Not logged in\") {\n        openNewEventPopUp(dateNum, eyear, emonth);\n      } else {\n        alert(res.data);\n      }\n    });\n  };\n\n  const handleEventClick = (e, event) => {\n    openEventView(events.indexOf(event));\n    e.stopPropagation();\n  };\n\n  function DateObj(date) {\n    return new Date(parseInt(date));\n  }\n\n  return /*#__PURE__*/React.createElement(Box, {\n    onClick: handleEmptyClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, events.map(event => DateObj(event.date).getDate() === dateNum && DateObj(event.date).getMonth() === emonth && DateObj(event.date).getFullYear() === eyear ? /*#__PURE__*/React.createElement(EventBox, {\n    key: event.name + event.date,\n    onClick: e => handleEventClick(e, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, event.name) : null));\n});\nexport default EventDayContainer;","map":{"version":3,"sources":["/home/jacob/Documents/paycom-planner-frontend/src/components/EventDayContainer.jsx"],"names":["React","useContext","styled","EventContexts","axios","Box","div","EventBox","EventDayContainer","memo","dateNum","eyear","emonth","openEventView","openNewEventPopUp","eventsData","events","month","year","handleEmptyClick","get","then","res","data","alert","handleEventClick","e","event","indexOf","stopPropagation","DateObj","date","Date","parseInt","map","getDate","getMonth","getFullYear","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGH,MAAM,CAACI,GAAI;;;;;;;;;;;CAAvB;AAaA,MAAMC,QAAQ,GAAGL,MAAM,CAACI,GAAI;;;;;;;;;;;;;CAA5B;AAcC,MAAME,iBAAiB,GAAGR,KAAK,CAACS,IAAN,CAAW,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAD,KAAgC;AACpE,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,iBAAjB;AAAoCC,IAAAA,UAAU,EAAEC,MAAhD;AAAwDC,IAAAA,KAAxD;AAA+DC,IAAAA;AAA/D,MAAwEjB,UAAU,CACtFE,aADsF,CAAxF;;AAIA,QAAMgB,gBAAgB,GAAG,MAAM;AAC7Bf,IAAAA,KAAK,CAACgB,GAAN,CAAW,cAAX,EACGC,IADH,CACQC,GAAG,IAAI;AACX,UAAGA,GAAG,CAACC,IAAJ,KAAa,eAAhB,EAAgC;AAC9BT,QAAAA,iBAAiB,CAACJ,OAAD,EAAUC,KAAV,EAAiBC,MAAjB,CAAjB;AACD,OAFD,MAEK;AACHY,QAAAA,KAAK,CAACF,GAAG,CAACC,IAAL,CAAL;AACD;AACF,KAPH;AAQD,GATD;;AAWA,QAAME,gBAAgB,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACrCd,IAAAA,aAAa,CAACG,MAAM,CAACY,OAAP,CAAeD,KAAf,CAAD,CAAb;AACAD,IAAAA,CAAC,CAACG,eAAF;AACD,GAHD;;AAKA,WAASC,OAAT,CAAiBC,IAAjB,EAAsB;AACpB,WAAO,IAAIC,IAAJ,CAASC,QAAQ,CAACF,IAAD,CAAjB,CAAP;AACD;;AAED,sBACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAEZ,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,MAAM,CAACkB,GAAP,CAAYP,KAAD,IACVG,OAAO,CAACH,KAAK,CAACI,IAAP,CAAP,CAAoBI,OAApB,OAAkCzB,OAAlC,IAA8CoB,OAAO,CAACH,KAAK,CAACI,IAAP,CAAP,CAAoBK,QAApB,OAAmCxB,MAAjF,IAA2FkB,OAAO,CAACH,KAAK,CAACI,IAAP,CAAP,CAAoBM,WAApB,OAAsC1B,KAAjI,gBACE,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEgB,KAAK,CAACW,IAAN,GAAaX,KAAK,CAACI,IAD1B;AAEE,IAAA,OAAO,EAAGL,CAAD,IAAOD,gBAAgB,CAACC,CAAD,EAAIC,KAAJ,CAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGA,KAAK,CAACW,IAJT,CADF,GAQI,IATL,CADH,CADF;AAeD,CAxC0B,CAA1B;AAyCD,eAAe9B,iBAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { EventContexts } from \"./EventContexts\";\nimport axios from \"axios\";\n\nconst Box = styled.div`\n  justify-content: center;\n  border: 1px solid black;\n  height: 10vh;\n  margin-bottom: -2px;\n  display: block;\n  margin-right: -2px;\n  margin-left: -2px;\n  cursor: pointer;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n\nconst EventBox = styled.div`\n  height: 20%;\n  width: 90%;\n  margin: auto;\n  border: 1px solid limegreen;\n  margin-top: 2px;\n  background: linear-gradient(lightgreen, white);\n  border-radius: 5px;\n  overflow: hidden;\n  white-space: nowrap;\n  font-size: calc(6px + 0.5vw);\n  line-height: 17px;\n  text-overflow: ellipsis;\n`;\n const EventDayContainer = React.memo(({ dateNum, eyear, emonth }) => {\n  const { openEventView, openNewEventPopUp, eventsData: events, month, year } = useContext(\n    EventContexts\n  );\n\n  const handleEmptyClick = () => {\n    axios.get(`/session.php`)\n      .then(res => {\n        if(res.data !== \"Not logged in\"){\n          openNewEventPopUp(dateNum, eyear, emonth);\n        }else{\n          alert(res.data);\n        }\n      });\n  };\n\n  const handleEventClick = (e, event) => {\n    openEventView(events.indexOf(event));\n    e.stopPropagation();\n  };\n\n  function DateObj(date){\n    return new Date(parseInt(date));\n  }\n\n  return (\n    <Box onClick={handleEmptyClick}>\n      {events.map((event) =>\n        DateObj(event.date).getDate() === dateNum &&  DateObj(event.date).getMonth() === emonth && DateObj(event.date).getFullYear() === eyear ? (\n          <EventBox\n            key={event.name + event.date}\n            onClick={(e) => handleEventClick(e, event)}\n          >\n            {event.name}\n          </EventBox>\n          \n        ) : null\n      )}\n    </Box>\n  );\n});\nexport default EventDayContainer;\n"]},"metadata":{},"sourceType":"module"}