{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Documents/paycom-planner-frontend/src/components/MonthCalendar.jsx\";\nimport React, { useContext, useState } from \"react\";\nimport Week from \"./MonthCalendarWeek\";\nimport styled from \"@emotion/styled\";\nimport { EventContexts } from \"./EventContexts\";\nimport SimpleMenu from \"./SimpleMenu\";\nconst Table = styled.table`\n  border: 1px solid black;\n  width: 80%;\n  min-width: 450px;\n  position: fixed;\n  left: 50%;\n  transform: translateX(-50%);\n  margin-top: 0;\n  table-layout: fixed;\n  background: white;\n`;\nconst Thead = styled.thead`\n  margin-bottom: 0;\n  padding-bottom: 0;\n`;\nconst Button = styled.div`\n  height: 100%;\n  width: 50%;\n  min-width: 60px;\n  margin: 0px;\n  border: 1px solid limegreen;\n  background: linear-gradient(#99b799, #eaeaea);\n  border-radius: 2px;\n  font-size: calc(6px + 0.5vw);\n  line-height: 18px;\n  cursor: pointer;\n  transform: translateX(50%);\n`;\nconst weekIds = [1, 2, 3, 4, 5];\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst MonthCalendar = React.memo(() => {\n  const {\n    month,\n    setMonth,\n    year,\n    setYear\n  } = useContext(EventContexts);\n\n  function subtractMonth() {\n    if (month === 0) {\n      setYear(year - 1);\n    }\n\n    setMonth(month - 1 % 12);\n  }\n\n  function addMonth() {\n    if (month === 11) {\n      setYear(year + 1);\n    }\n\n    setMonth(month + 1 % 12);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Thead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"\" + months[month] + \" \" + year), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: subtractMonth,\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Prev Month\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: addMonth,\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"Next Month\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, weekIds.map(id => /*#__PURE__*/React.createElement(Week, {\n    weekNum: id,\n    year: year,\n    month: month,\n    key: \"week\" + id,\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })))));\n});\nexport default MonthCalendar;","map":{"version":3,"sources":["/home/jacob/Documents/paycom-planner-frontend/src/components/MonthCalendar.jsx"],"names":["React","useContext","useState","Week","styled","EventContexts","SimpleMenu","Table","table","Thead","thead","Button","div","weekIds","months","MonthCalendar","memo","month","setMonth","year","setYear","subtractMonth","addMonth","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAGA,MAAMC,KAAK,GAAGH,MAAM,CAACI,KAAM;;;;;;;;;;CAA3B;AAWA,MAAMC,KAAK,GAAGL,MAAM,CAACM,KAAM;;;CAA3B;AAKA,MAAMC,MAAM,GAAGP,MAAM,CAACQ,GAAI;;;;;;;;;;;;CAA1B;AAcA,MAAMC,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAhB;AACA,MAAMC,MAAM,GAAG,CACb,SADa,EAEb,UAFa,EAGb,OAHa,EAIb,OAJa,EAKb,KALa,EAMb,MANa,EAOb,MAPa,EAQb,QARa,EASb,WATa,EAUb,SAVa,EAWb,UAXa,EAYb,UAZa,CAAf;AAgBA,MAAMC,aAAa,GAAGf,KAAK,CAACgB,IAAN,CAAW,MAAM;AACrC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA;AAAzB,MAAqCnB,UAAU,CAACI,aAAD,CAArD;;AAEA,WAASgB,aAAT,GAAwB;AACtB,QAAGJ,KAAK,KAAK,CAAb,EAAe;AACbG,MAAAA,OAAO,CAACD,IAAI,GAAE,CAAP,CAAP;AACD;;AACDD,IAAAA,QAAQ,CAACD,KAAK,GAAG,IAAI,EAAb,CAAR;AACD;;AACD,WAASK,QAAT,GAAmB;AACjB,QAAGL,KAAK,KAAK,EAAb,EAAgB;AACdG,MAAAA,OAAO,CAACD,IAAI,GAAE,CAAP,CAAP;AACD;;AACDD,IAAAA,QAAQ,CAACD,KAAK,GAAG,IAAI,EAAb,CAAR;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,KAAKH,MAAM,CAACG,KAAD,CAAX,GAAqB,GAArB,GAA2BE,IAAhC,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEE,aAAjB;AAAgC,IAAA,SAAS,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,QAAjB;AAA2B,IAAA,SAAS,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CALF,CADF,CADF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,OAAO,CAACU,GAAR,CAAaC,EAAD,iBACX,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEA,EAAf;AAAmB,IAAA,IAAI,EAAEL,IAAzB;AAA+B,IAAA,KAAK,EAAEF,KAAtC;AAA6C,IAAA,GAAG,EAAE,SAASO,EAA3D;AAA+D,IAAA,EAAE,EAAEA,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAZF,CADF,CADF;AAsBD,CAtCqB,CAAtB;AAwCA,eAAeT,aAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport Week from \"./MonthCalendarWeek\";\nimport styled from \"@emotion/styled\";\nimport { EventContexts } from \"./EventContexts\";\nimport SimpleMenu from \"./SimpleMenu\";\n\n\nconst Table = styled.table`\n  border: 1px solid black;\n  width: 80%;\n  min-width: 450px;\n  position: fixed;\n  left: 50%;\n  transform: translateX(-50%);\n  margin-top: 0;\n  table-layout: fixed;\n  background: white;\n`;\nconst Thead = styled.thead`\n  margin-bottom: 0;\n  padding-bottom: 0;\n`;\n\nconst Button = styled.div`\n  height: 100%;\n  width: 50%;\n  min-width: 60px;\n  margin: 0px;\n  border: 1px solid limegreen;\n  background: linear-gradient(#99b799, #eaeaea);\n  border-radius: 2px;\n  font-size: calc(6px + 0.5vw);\n  line-height: 18px;\n  cursor: pointer;\n  transform: translateX(50%);\n`;\n\nconst weekIds = [1, 2, 3, 4, 5];\nconst months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\n\nconst MonthCalendar = React.memo(() => {\n  const { month, setMonth, year, setYear } = useContext(EventContexts);\n\n  function subtractMonth(){\n    if(month === 0){\n      setYear(year -1);\n    }\n    setMonth(month - 1 % 12);\n  }\n  function addMonth(){\n    if(month === 11){\n      setYear(year +1);\n    }\n    setMonth(month + 1 % 12);\n  }\n\n  return (\n    <div>\n      <Table>\n        <Thead>\n          <tr>\n            <td>{\"\" + months[month] + \" \" + year}</td>\n            <td>\n              <Button onClick={subtractMonth} className=\"button\">Prev Month</Button>\n            </td>\n            <td>\n              <Button onClick={addMonth} className=\"button\">Next Month</Button>\n            </td>\n          </tr>\n        </Thead>\n        <tbody>\n          {weekIds.map((id) => (\n            <Week weekNum={id} year={year} month={month} key={\"week\" + id} id={id} />\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n});\n\nexport default MonthCalendar;\n"]},"metadata":{},"sourceType":"module"}