{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Documents/paycom-planner-frontend/src/components/LoginContext.jsx\";\nimport React, { useState, createContext } from \"react\";\nimport axios from \"axios\";\nexport const LoginContext = createContext();\nexport const LoginProvider = props => {\n  const [isLoginPopUpOpen, setIsLoginPopUpOpen] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function handleLoginData(data) {\n    function getCheck() {\n      console.log(data);\n      let val = axios.post(`/validate_user.php`, data).then(res => {\n        return checkPass(res.data);\n      });\n      getCheck().then(data => {\n        console.log(data);\n      });\n    }\n  }\n\n  function checkPass(data) {\n    if (!data) {\n      return \"failed\";\n    }\n\n    return \"success\";\n  }\n\n  function handleSignup(data) {\n    console.log(data);\n    axios.post(`/insert_user.php`, data).then(res => console.log(res.data));\n  }\n\n  function openLoginPopUp() {\n    setIsLoginPopUpOpen(true);\n  }\n\n  return /*#__PURE__*/React.createElement(LoginContext.Provider, {\n    value: {\n      isLoginPopUpOpen,\n      setIsLoginPopUpOpen,\n      openLoginPopUp,\n      handleLoginData,\n      handleSignup\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/home/jacob/Documents/paycom-planner-frontend/src/components/LoginContext.jsx"],"names":["React","useState","createContext","axios","LoginContext","LoginProvider","props","isLoginPopUpOpen","setIsLoginPopUpOpen","email","setEmail","password","setPassword","handleLoginData","data","getCheck","console","log","val","post","then","res","checkPass","handleSignup","openLoginPopUp","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAGF,aAAa,EAAlC;AAEP,OAAO,MAAMG,aAAa,GAAIC,KAAD,IAAW;AACtC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASY,eAAT,CAAyBC,IAAzB,EAA+B;AAC7B,aAASC,QAAT,GAAmB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,UAAII,GAAG,GAAGf,KAAK,CAACgB,IAAN,CAAY,oBAAZ,EAAiCL,IAAjC,EACCM,IADD,CACMC,GAAG,IAAI;AACX,eAAOC,SAAS,CAACD,GAAG,CAACP,IAAL,CAAhB;AACD,OAHD,CAAV;AAKFC,MAAAA,QAAQ,GAAGK,IAAX,CAAgBN,IAAI,IAAI;AACtBE,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,OAFD;AAGD;AAGA;;AAED,WAASQ,SAAT,CAAmBR,IAAnB,EAAwB;AACtB,QAAG,CAACA,IAAJ,EAAS;AACP,aAAO,QAAP;AACD;;AACD,WAAO,SAAP;AACD;;AAED,WAASS,YAAT,CAAsBT,IAAtB,EAA4B;AAC1BE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAX,IAAAA,KAAK,CAACgB,IAAN,CAAY,kBAAZ,EAA+BL,IAA/B,EACCM,IADD,CACMC,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACP,IAAhB,CADb;AAED;;AAID,WAASU,cAAT,GAA0B;AACxBhB,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD;;AAED,sBACE,oBAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,gBADK;AAELC,MAAAA,mBAFK;AAGLgB,MAAAA,cAHK;AAILX,MAAAA,eAJK;AAKLU,MAAAA;AALK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGjB,KAAK,CAACmB,QATT,CADF;AAaD,CArDM","sourcesContent":["import React, { useState, createContext } from \"react\";\nimport axios from \"axios\";\n\nexport const LoginContext = createContext();\n\nexport const LoginProvider = (props) => {\n  const [isLoginPopUpOpen, setIsLoginPopUpOpen] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function handleLoginData(data) {\n    function getCheck(){\n      console.log(data);\n      let val = axios.post(`/validate_user.php`, data)\n                .then(res => {\n                  return checkPass(res.data)\n                });\n\n    getCheck().then(data => {\n      console.log(data);\n    })\n  }\n\n  \n  }\n\n  function checkPass(data){\n    if(!data){\n      return \"failed\";\n    }\n    return \"success\";\n  }\n\n  function handleSignup(data) {\n    console.log(data);\n    axios.post(`/insert_user.php`, data)\n    .then(res => console.log(res.data));\n  }\n\n\n\n  function openLoginPopUp() {\n    setIsLoginPopUpOpen(true);\n  }\n\n  return (\n    <LoginContext.Provider\n      value={{\n        isLoginPopUpOpen,\n        setIsLoginPopUpOpen,\n        openLoginPopUp,\n        handleLoginData,\n        handleSignup,\n      }}\n    >\n      {props.children}\n    </LoginContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}