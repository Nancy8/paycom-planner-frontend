{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Documents/paycom-planner-frontend/src/components/MonthCalendar.jsx\";\nimport React, { useContext, useState } from \"react\";\nimport Day from \"./MonthCalendarDay\";\nimport styled from \"@emotion/styled\";\nimport { EventContexts } from \"./EventContexts\";\nimport SimpleMenu from \"./SimpleMenu\";\nconst Table = styled.table`\n  border: 1px solid black;\n  width: 80%;\n  min-width: 450px;\n  position: fixed;\n  left: 50%;\n  transform: translateX(-50%);\n  margin-top: 0;\n  table-layout: fixed;\n  background: white;\n`;\nconst Thead = styled.thead`\n  margin-bottom: 0;\n  padding-bottom: 0;\n`;\nconst Button = styled.div`\n  height: 100%;\n  width: 50%;\n  min-width: 60px;\n  margin: 0px;\n  border: 1px solid limegreen;\n  background: linear-gradient(#99b799, #eaeaea);\n  border-radius: 2px;\n  font-size: calc(6px + 0.5vw);\n  line-height: 18px;\n  cursor: pointer;\n  transform: translateX(50%);\n`;\nconst dayIds = [[0, 1, 2, 3, 4, 5, 6], [7, 8, 9, 10, 11, 12, 13], [14, 15, 16, 17, 18, 19, 20], [21, 22, 23, 24, 25, 26, 27], [28, 29, 30, 31, 32, 33, 34]];\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\nconst MonthCalendar = React.memo(() => {\n  const {\n    month,\n    setMonth,\n    year,\n    setYear\n  } = useContext(EventContexts);\n\n  function subtractMonth() {\n    if (month === 0) {\n      setYear(year - 1);\n    }\n\n    setMonth(month - 1 % 12);\n  }\n\n  function addMonth() {\n    if (month === 11) {\n      setYear(year + 1);\n    }\n\n    setMonth(month + 1 % 12);\n  }\n\n  function getDate(y, m, d) {\n    let firstDay = new Date(y, m, 1);\n    let lastDay = new Date(y, m + 1, 0);\n\n    if (firstDay.getDay() > d) {\n      m--;\n\n      if (m === -1) {\n        y--;\n        m = 11;\n      }\n\n      let prevMonthLastDay = new Date(y, m + 1, 0);\n      d = prevMonthLastDay.getDate() - firstDay.getDay() + d + 1;\n    } else {\n      d = d - firstDay.getDay() + 1;\n    }\n\n    return {\n      y,\n      m,\n      d\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Thead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"\" + months[month] + \" \" + year), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: subtractMonth,\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, \"Prev Month\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: addMonth,\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Next Month\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, dayIds.map(week => /*#__PURE__*/React.createElement(\"tr\", {\n    key: week[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, week.map(day => /*#__PURE__*/React.createElement(Day, {\n    key: day,\n    date: getDate(year, month, day),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  })))))));\n});\nexport default MonthCalendar;","map":{"version":3,"sources":["/home/jacob/Documents/paycom-planner-frontend/src/components/MonthCalendar.jsx"],"names":["React","useContext","useState","Day","styled","EventContexts","SimpleMenu","Table","table","Thead","thead","Button","div","dayIds","months","days","MonthCalendar","memo","month","setMonth","year","setYear","subtractMonth","addMonth","getDate","y","m","d","firstDay","Date","lastDay","getDay","prevMonthLastDay","map","week","day"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport Day from \"./MonthCalendarDay\";\nimport styled from \"@emotion/styled\";\nimport { EventContexts } from \"./EventContexts\";\nimport SimpleMenu from \"./SimpleMenu\";\n\n\nconst Table = styled.table`\n  border: 1px solid black;\n  width: 80%;\n  min-width: 450px;\n  position: fixed;\n  left: 50%;\n  transform: translateX(-50%);\n  margin-top: 0;\n  table-layout: fixed;\n  background: white;\n`;\nconst Thead = styled.thead`\n  margin-bottom: 0;\n  padding-bottom: 0;\n`;\n\nconst Button = styled.div`\n  height: 100%;\n  width: 50%;\n  min-width: 60px;\n  margin: 0px;\n  border: 1px solid limegreen;\n  background: linear-gradient(#99b799, #eaeaea);\n  border-radius: 2px;\n  font-size: calc(6px + 0.5vw);\n  line-height: 18px;\n  cursor: pointer;\n  transform: translateX(50%);\n`;\n\nconst dayIds = [[0, 1, 2, 3, 4, 5, 6],\n                [7, 8, 9, 10, 11, 12, 13],\n                [14, 15, 16, 17, 18, 19, 20],\n                [21, 22, 23, 24, 25, 26, 27],\n                [28, 29, 30, 31, 32, 33, 34]];\n\nconst months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n\nconst MonthCalendar = React.memo(() => {\n  const { month, setMonth, year, setYear } = useContext(EventContexts);\n\n  function subtractMonth(){\n    if(month === 0){\n      setYear(year -1);\n    }\n    setMonth(month - 1 % 12);\n  }\n  function addMonth(){\n    if(month === 11){\n      setYear(year +1);\n    }\n    setMonth(month + 1 % 12);\n  }\n  function getDate(y, m, d){\n    let firstDay = new Date(y, m, 1);\n    let lastDay = new Date(y, m + 1, 0);\n    if(firstDay.getDay() > d){\n      m--;\n      if(m === -1){\n        y--;\n        m = 11;\n      }\n      let prevMonthLastDay = new Date(y, m+1, 0);\n      d = prevMonthLastDay.getDate() - firstDay.getDay() + d + 1\n    }else{\n      d = d - firstDay.getDay() + 1;\n    }\n    return {y, m, d};\n  }\n\n  return (\n    <div>\n      <Table>\n        <Thead>\n          <tr>\n            <td>{\"\" + months[month] + \" \" + year}</td>\n            <td>\n              <Button onClick={subtractMonth} className=\"button\">Prev Month</Button>\n            </td>\n            <td>\n              <Button onClick={addMonth} className=\"button\">Next Month</Button>\n            </td>\n          </tr>\n        </Thead>\n        <tbody>\n          {dayIds.map((week) => (\n            <tr key={week[0]}>\n            {week.map((day) => (\n              <Day\n                key={day}\n                date={getDate(year, month, day)}\n              />\n            ))}\n            </tr>\n          ))} \n        </tbody>\n      </Table>\n    </div>\n  );\n});\n\nexport default MonthCalendar;\n"]},"metadata":{},"sourceType":"module"}