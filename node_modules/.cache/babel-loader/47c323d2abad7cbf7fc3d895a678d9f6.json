{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Documents/paycom-planner-frontend/src/App.js\";\nimport React, { useState, useContext } from \"react\";\nimport \"./App.css\"; //import { Calendar } from \"@material-ui/pickers\";\n//import { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n//import DateFnsUtils from \"@date-io/date-fns\";\n\nimport styled from \"@emotion/styled\";\nimport MonthCalendar from \"./components/MonthCalendar\";\nimport { Button } from \"react-bootstrap\";\nimport NewEventPopUp from \"./components/NewEventPopUp\";\nimport CurrentEventPopUp from \"./components/CurrentEventPopUp\";\nimport { EventContexts } from \"./components/EventContexts\";\nimport { LoginContext } from \"./components/LoginContext\";\nimport LoginPopUp from \"./components/LoginPopUp\";\nimport axios from \"axios\";\nconst Title = styled.h1`\n  color: yellowgreen;\n`;\nconst ButtonWrap = styled.div`\n  & .login {\n    position: relative;\n    background: lightgreen;\n    color: black;\n    left: 39%;\n    margin-bottom: 10px;\n  }\n`;\n\nfunction App() {\n  const {\n    isNewEventPopUpOpen,\n    isEventPopUpOpen\n  } = useContext(EventContexts);\n  const {\n    isLoginPopUpOpen,\n    openLoginPopUp,\n    loggedIn\n  } = useContext(LoginContext);\n  const [email, setEmail] = useState(\"\");\n\n  function getEmail() {\n    axios.get(`/session.php`).then(res => {\n      setEmail(res.data);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Paycom Project Planner\"), /*#__PURE__*/React.createElement(ButtonWrap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: openLoginPopUp,\n    className: \"login\",\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Log In\")), /*#__PURE__*/React.createElement(MonthCalendar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), loggedIn ? getEmail() : null, email !== \"\" ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }\n  }, email) : null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, isLoginPopUpOpen ? /*#__PURE__*/React.createElement(LoginPopUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 32\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, isNewEventPopUpOpen ? /*#__PURE__*/React.createElement(NewEventPopUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 35\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, isEventPopUpOpen ? /*#__PURE__*/React.createElement(CurrentEventPopUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 32\n    }\n  }) : null));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/jacob/Documents/paycom-planner-frontend/src/App.js"],"names":["React","useState","useContext","styled","MonthCalendar","Button","NewEventPopUp","CurrentEventPopUp","EventContexts","LoginContext","LoginPopUp","axios","Title","h1","ButtonWrap","div","App","isNewEventPopUpOpen","isEventPopUpOpen","isLoginPopUpOpen","openLoginPopUp","loggedIn","email","setEmail","getEmail","get","then","res","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAO,WAAP,C,CACA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,KAAK,GAAGT,MAAM,CAACU,EAAG;;CAAxB;AAIA,MAAMC,UAAU,GAAGX,MAAM,CAACY,GAAI;;;;;;;;CAA9B;;AAUA,SAASC,GAAT,GAAe;AACb,QAAM;AAAEC,IAAAA,mBAAF;AAAuBC,IAAAA;AAAvB,MAA4ChB,UAAU,CAACM,aAAD,CAA5D;AACA,QAAM;AAAEW,IAAAA,gBAAF;AAAoBC,IAAAA,cAApB;AAAoCC,IAAAA;AAApC,MAAiDnB,UAAU,CAACO,YAAD,CAAjE;AACA,QAAM,CAAEa,KAAF,EAASC,QAAT,IAAsBtB,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASuB,QAAT,GAAmB;AACjBb,IAAAA,KAAK,CAACc,GAAN,CAAW,cAAX,EACGC,IADH,CACQC,GAAG,IAAI;AACXJ,MAAAA,QAAQ,CAACI,GAAG,CAACC,IAAL,CAAR;AACD,KAHH;AAID;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAER,cAAjB;AAAiC,IAAA,SAAS,EAAC,OAA3C;AAAmD,IAAA,OAAO,EAAC,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAFF,eAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQGC,QAAQ,GAAGG,QAAQ,EAAX,GAAgB,IAR3B,EASGF,KAAK,KAAK,EAAV,gBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAJ,CAAf,GAAgC,IATnC,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,gBAAgB,gBAAG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAoB,IAA1C,CAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,mBAAmB,gBAAG,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAuB,IAAhD,CAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,gBAAgB,gBAAG,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA2B,IAAjD,CAZF,CADF;AAgBD;;AAED,eAAeF,GAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport \"./App.css\";\n//import { Calendar } from \"@material-ui/pickers\";\n//import { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n//import DateFnsUtils from \"@date-io/date-fns\";\nimport styled from \"@emotion/styled\";\nimport MonthCalendar from \"./components/MonthCalendar\";\nimport { Button } from \"react-bootstrap\";\nimport NewEventPopUp from \"./components/NewEventPopUp\";\nimport CurrentEventPopUp from \"./components/CurrentEventPopUp\";\nimport { EventContexts } from \"./components/EventContexts\";\nimport { LoginContext } from \"./components/LoginContext\";\nimport LoginPopUp from \"./components/LoginPopUp\";\nimport axios from \"axios\";\n\nconst Title = styled.h1`\n  color: yellowgreen;\n`;\n\nconst ButtonWrap = styled.div`\n  & .login {\n    position: relative;\n    background: lightgreen;\n    color: black;\n    left: 39%;\n    margin-bottom: 10px;\n  }\n`;\n\nfunction App() {\n  const { isNewEventPopUpOpen, isEventPopUpOpen } = useContext(EventContexts);\n  const { isLoginPopUpOpen, openLoginPopUp, loggedIn } = useContext(LoginContext);\n  const [ email, setEmail ] = useState(\"\");\n\n  function getEmail(){\n    axios.get(`/session.php`)\n      .then(res => {\n        setEmail(res.data);\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <Title color=\"primary\">Paycom Project Planner</Title>\n      <ButtonWrap>\n        <Button onClick={openLoginPopUp} className=\"login\" variant=\"success\">\n          Log In\n        </Button>\n      </ButtonWrap>\n      <MonthCalendar />\n      {loggedIn ? getEmail() : null}\n      {email !== \"\" ? <p>{email}</p> : null}\n      <div>{isLoginPopUpOpen ? <LoginPopUp /> : null}</div>\n      <div>{isNewEventPopUpOpen ? <NewEventPopUp /> : null}</div>\n      <div>{isEventPopUpOpen ? <CurrentEventPopUp /> : null}</div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}