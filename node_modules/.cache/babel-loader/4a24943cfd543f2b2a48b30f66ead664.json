{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Documents/paycom-planner-frontend/src/components/LoginPopUp.jsx\";\nimport React, { useState, useContext } from \"react\";\nimport styled from \"@emotion/styled\";\nimport Button from \"react-bootstrap/Button\";\nimport { LoginContext } from \"./LoginContext\";\nconst PopUpOuter = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  margin: auto;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\nconst PopUpInner = styled.div`\n  position: absolute;\n  width: 30%;\n  height: 30%;\n  min-width: 350px;\n  position: fixed;\n  left: 50%;\n  bottom: 50%;\n  transform: translateX(-50%);\n  margin: auto;\n  border-radius: 20px;\n  background: white;\n`;\nconst XButton = styled.div`\n  border: 1px solid lightgray;\n  color: white;\n  background: lightgray;\n  height: 18px;\n  width: 18px;\n  cursor: pointer;\n  margin-right: 10px;\n  line-height: 17px;\n  border-radius: 50%;\n`;\nconst RightFlexBox = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  padding-top: 10px;\n`;\nconst CenterFlexBox = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n`;\nconst Input = styled.input`\n  width: 70%;\n  padding: 0.6em 0.7em;\n  margin: 5px 5px 5px 0px;\n  border: 1px solid black;\n  border-radius: 3px;\n  background-color: var(--white);\n  color: var(--fc-dark);\n  line-height: 1.15384615;\n`;\nconst Label = styled.label`\n  margin: 0;\n`;\nexport default function LoginPopUp() {\n  const {\n    setIsLoginPopUpOpen,\n    handleLoginData\n  } = useContext(LoginContext);\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function handleSubmit() {\n    handleLoginData([username, password]);\n  }\n\n  return /*#__PURE__*/React.createElement(PopUpOuter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PopUpInner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RightFlexBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(XButton, {\n    onClick: () => setIsLoginPopUpOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(CenterFlexBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"User Name: \"), /*#__PURE__*/React.createElement(Input, {\n    value: username,\n    onChange: e => setUserName(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Password:\"), /*#__PURE__*/React.createElement(Input, {\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    onClick: handleSubmit,\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/jacob/Documents/paycom-planner-frontend/src/components/LoginPopUp.jsx"],"names":["React","useState","useContext","styled","Button","LoginContext","PopUpOuter","div","PopUpInner","XButton","RightFlexBox","CenterFlexBox","Input","input","Label","label","LoginPopUp","setIsLoginPopUpOpen","handleLoginData","username","setUserName","password","setPassword","handleSubmit","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,MAAMC,UAAU,GAAGH,MAAM,CAACI,GAAI;;;;;;;;;;CAA9B;AAYA,MAAMC,UAAU,GAAGL,MAAM,CAACI,GAAI;;;;;;;;;;;;CAA9B;AAcA,MAAME,OAAO,GAAGN,MAAM,CAACI,GAAI;;;;;;;;;;CAA3B;AAYA,MAAMG,YAAY,GAAGP,MAAM,CAACI,GAAI;;;;CAAhC;AAKA,MAAMI,aAAa,GAAGR,MAAM,CAACI,GAAI;;;;;;CAAjC;AAOA,MAAMK,KAAK,GAAGT,MAAM,CAACU,KAAM;;;;;;;;;CAA3B;AAWA,MAAMC,KAAK,GAAGX,MAAM,CAACY,KAAM;;CAA3B;AAIA,eAAe,SAASC,UAAT,GAAsB;AACnC,QAAM;AAAEC,IAAAA,mBAAF;AAAuBC,IAAAA;AAAvB,MAA2ChB,UAAU,CAACG,YAAD,CAA3D;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASsB,YAAT,GAAwB;AACtBL,IAAAA,eAAe,CAAC,CAACC,QAAD,EAAWE,QAAX,CAAD,CAAf;AACD;;AAED,sBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAE,MAAMJ,mBAAmB,CAAC,KAAD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,eAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEE,QADT;AAEE,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAF9B;AAGE,IAAA,IAAI,EAAC,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAOE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,eAQE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEL,QADT;AAEE,IAAA,QAAQ,EAAGG,CAAD,IAAOF,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAF9B;AAGE,IAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CALF,eAmBE;AAAO,IAAA,OAAO,EAAEH,YAAhB;AAA8B,IAAA,IAAI,EAAC,QAAnC;AAA4C,IAAA,KAAK,EAAC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF,CADF;AAyBD","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport styled from \"@emotion/styled\";\nimport Button from \"react-bootstrap/Button\";\nimport { LoginContext } from \"./LoginContext\";\n\nconst PopUpOuter = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  margin: auto;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nconst PopUpInner = styled.div`\n  position: absolute;\n  width: 30%;\n  height: 30%;\n  min-width: 350px;\n  position: fixed;\n  left: 50%;\n  bottom: 50%;\n  transform: translateX(-50%);\n  margin: auto;\n  border-radius: 20px;\n  background: white;\n`;\n\nconst XButton = styled.div`\n  border: 1px solid lightgray;\n  color: white;\n  background: lightgray;\n  height: 18px;\n  width: 18px;\n  cursor: pointer;\n  margin-right: 10px;\n  line-height: 17px;\n  border-radius: 50%;\n`;\n\nconst RightFlexBox = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  padding-top: 10px;\n`;\nconst CenterFlexBox = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n`;\nconst Input = styled.input`\n  width: 70%;\n  padding: 0.6em 0.7em;\n  margin: 5px 5px 5px 0px;\n  border: 1px solid black;\n  border-radius: 3px;\n  background-color: var(--white);\n  color: var(--fc-dark);\n  line-height: 1.15384615;\n`;\n\nconst Label = styled.label`\n  margin: 0;\n`;\n\nexport default function LoginPopUp() {\n  const { setIsLoginPopUpOpen, handleLoginData } = useContext(LoginContext);\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function handleSubmit() {\n    handleLoginData([username, password]);\n  }\n\n  return (\n    <PopUpOuter>\n      <PopUpInner>\n        <RightFlexBox>\n          <XButton onClick={() => setIsLoginPopUpOpen(false)}>&times;</XButton>\n        </RightFlexBox>\n        <h2>Login</h2>\n        <CenterFlexBox>\n          <Label>User Name: </Label>\n          <Input\n            value={username}\n            onChange={(e) => setUserName(e.target.value)}\n            type=\"text\"\n          />\n          <Label>Password:</Label>\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type=\"password\"\n          />\n        </CenterFlexBox>\n        <input onClick={handleSubmit} type=\"submit\" value=\"Submit\" />\n      </PopUpInner>\n    </PopUpOuter>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}