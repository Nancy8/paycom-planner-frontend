{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Documents/paycom-planner-frontend/src/components/LoginContext.jsx\";\nimport React, { useState, createContext } from \"react\";\nimport axios from \"axios\";\nexport const LoginContext = createContext();\nexport const LoginProvider = props => {\n  const [isLoginPopUpOpen, setIsLoginPopUpOpen] = useState(false);\n\n  function handleLoginData(data) {\n    setIsLoginPopUpOpen(false);\n    console.log(data);\n  }\n\n  function openLoginPopUp() {\n    setIsLoginPopUpOpen(true);\n  }\n\n  return /*#__PURE__*/React.createElement(LoginContext.Provider, {\n    value: {\n      isLoginPopUpOpen,\n      setIsLoginPopUpOpen,\n      openLoginPopUp,\n      handleLoginData\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/home/jacob/Documents/paycom-planner-frontend/src/components/LoginContext.jsx"],"names":["React","useState","createContext","axios","LoginContext","LoginProvider","props","isLoginPopUpOpen","setIsLoginPopUpOpen","handleLoginData","data","console","log","openLoginPopUp","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAGF,aAAa,EAAlC;AAEP,OAAO,MAAMG,aAAa,GAAIC,KAAD,IAAW;AACtC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,KAAD,CAAxD;;AAEA,WAASQ,eAAT,CAAyBC,IAAzB,EAA+B;AAC7BF,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAED;;AAED,WAASG,cAAT,GAA0B;AACxBL,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD;;AAED,sBACE,oBAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,gBADK;AAELC,MAAAA,mBAFK;AAGLK,MAAAA,cAHK;AAILJ,MAAAA;AAJK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGH,KAAK,CAACQ,QART,CADF;AAYD,CAzBM","sourcesContent":["import React, { useState, createContext } from \"react\";\nimport axios from \"axios\";\n\nexport const LoginContext = createContext();\n\nexport const LoginProvider = (props) => {\n  const [isLoginPopUpOpen, setIsLoginPopUpOpen] = useState(false);\n\n  function handleLoginData(data) {\n    setIsLoginPopUpOpen(false);\n    console.log(data);\n\n  }\n\n  function openLoginPopUp() {\n    setIsLoginPopUpOpen(true);\n  }\n\n  return (\n    <LoginContext.Provider\n      value={{\n        isLoginPopUpOpen,\n        setIsLoginPopUpOpen,\n        openLoginPopUp,\n        handleLoginData,\n      }}\n    >\n      {props.children}\n    </LoginContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}