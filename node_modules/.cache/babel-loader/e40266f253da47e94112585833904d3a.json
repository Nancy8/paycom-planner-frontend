{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Documents/paycom-planner-frontend/src/App.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport \"./App.css\"; //import { Calendar } from \"@material-ui/pickers\";\n//import { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n//import DateFnsUtils from \"@date-io/date-fns\";\n\nimport styled from \"@emotion/styled\";\nimport MonthCalendar from \"./components/MonthCalendar\";\nimport { Button } from \"react-bootstrap\";\nimport NewEventPopUp from \"./components/NewEventPopUp\";\nimport CurrentEventPopUp from \"./components/CurrentEventPopUp\";\nimport { EventContexts } from \"./components/EventContexts\";\nimport { LoginContext } from \"./components/LoginContext\";\nimport LoginPopUp from \"./components/LoginPopUp\";\nimport LogoutPopUp from \"./components/LogoutPopUp\";\nimport axios from \"axios\";\nconst Title = styled.h1`\n  color: white;\n`;\nconst ButtonWrap = styled.div`\n  & .login {\n    position: relative;\n    background: lightgreen;\n    color: black;\n    margin-bottom: 10px;\n  }\n`;\n\nfunction App() {\n  const {\n    isNewEventPopUpOpen,\n    isEventPopUpOpen,\n    setEventsData\n  } = useContext(EventContexts);\n  const {\n    isLoginPopUpOpen,\n    openLoginPopUp,\n    openLogoutPopUp,\n    getEmail,\n    email,\n    isLogoutPopUpOpen\n  } = useContext(LoginContext);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    if (!isLoaded) {\n      axios.get(`/getEvents.php`).then(res => {\n        setEventsData(res.data);\n        setIsLoaded(true);\n        getEmail();\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Paycom Project Planner\"), /*#__PURE__*/React.createElement(ButtonWrap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: email === \"\" ? openLoginPopUp : openLogoutPopUp,\n    className: \"login\",\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, email !== \"\" ? \"Logged in as: \" + email : \"Log In\")), /*#__PURE__*/React.createElement(MonthCalendar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, isLoginPopUpOpen ? /*#__PURE__*/React.createElement(LoginPopUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 32\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, isLogoutPopUpOpen ? /*#__PURE__*/React.createElement(LogoutPopUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, isNewEventPopUpOpen ? /*#__PURE__*/React.createElement(NewEventPopUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 35\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, isEventPopUpOpen ? /*#__PURE__*/React.createElement(CurrentEventPopUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 32\n    }\n  }) : null));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/jacob/Documents/paycom-planner-frontend/src/App.js"],"names":["React","useState","useContext","useEffect","styled","MonthCalendar","Button","NewEventPopUp","CurrentEventPopUp","EventContexts","LoginContext","LoginPopUp","LogoutPopUp","axios","Title","h1","ButtonWrap","div","App","isNewEventPopUpOpen","isEventPopUpOpen","setEventsData","isLoginPopUpOpen","openLoginPopUp","openLogoutPopUp","getEmail","email","isLogoutPopUpOpen","isLoaded","setIsLoaded","get","then","res","data"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport \"./App.css\";\n//import { Calendar } from \"@material-ui/pickers\";\n//import { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n//import DateFnsUtils from \"@date-io/date-fns\";\nimport styled from \"@emotion/styled\";\nimport MonthCalendar from \"./components/MonthCalendar\";\nimport { Button } from \"react-bootstrap\";\nimport NewEventPopUp from \"./components/NewEventPopUp\";\nimport CurrentEventPopUp from \"./components/CurrentEventPopUp\";\nimport { EventContexts } from \"./components/EventContexts\";\nimport { LoginContext } from \"./components/LoginContext\";\nimport LoginPopUp from \"./components/LoginPopUp\";\nimport LogoutPopUp from \"./components/LogoutPopUp\";\nimport axios from \"axios\";\n\nconst Title = styled.h1`\n  color: white;\n`;\n\nconst ButtonWrap = styled.div`\n  & .login {\n    position: relative;\n    background: lightgreen;\n    color: black;\n    margin-bottom: 10px;\n  }\n`;\n\nfunction App() {\n  const { isNewEventPopUpOpen, isEventPopUpOpen, setEventsData } = useContext(EventContexts);\n  const { isLoginPopUpOpen, openLoginPopUp, openLogoutPopUp, getEmail, email, isLogoutPopUpOpen } = useContext(LoginContext);\n  const [ isLoaded, setIsLoaded] = useState(false);\n  \n  useEffect(() => {   \n    if(!isLoaded){\n      axios.get(`/getEvents.php`)\n        .then(res => {\n          setEventsData(res.data);\n          setIsLoaded(true);\n          getEmail();\n        });\n    }\n  })\n\n  return (\n    <div className=\"App\">\n      <Title>Paycom Project Planner</Title>\n      <ButtonWrap>\n        <Button onClick={email === \"\" ? openLoginPopUp : openLogoutPopUp} className=\"login\" variant=\"success\">\n          {email !== \"\" ? \"Logged in as: \" + email : \"Log In\" }\n        </Button>\n        \n      </ButtonWrap>\n      \n      <MonthCalendar />\n      <div>{isLoginPopUpOpen ? <LoginPopUp /> : null}</div>\n      <div>{isLogoutPopUpOpen ? <LogoutPopUp /> : null}</div>\n      <div>{isNewEventPopUpOpen ? <NewEventPopUp /> : null}</div>\n      <div>{isEventPopUpOpen ? <CurrentEventPopUp /> : null}</div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}